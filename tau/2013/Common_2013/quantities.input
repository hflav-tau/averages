#
# Gamma810 = G(2pi- pi+ 3pi0 nu(tau) (ex. K0, omega)) / G(total)
#
QUANTITY Gamma810 descr "G(2pi- pi+ 3pi0 nu(tau) (ex. K0, omega)) / G(total)"
QUANTITY Gamma810 texdescr "2\pi^- \pi^+ 3\pi^0 \nu_\tau ~(\mathrm{ex.~}K^0, \omega)"
#
# Gamma810 = Gamma910 + Gamma911 + Gamma811 + Gamma812
#
# Gamma910 = G(2pi- pi+ eta(3pi0) nu(tau) (ex. K0)) / G(total)
# Gamma911 = G(pi- 2pi0 eta(pi+ pi- pi0) nu(tau) (ex. K0)) / G(total)
# Gamma811 = G(pi- 2pi0 omega nu(tau) (ex. K0)) / G(total)
# Gamma812 = G(2pi- pi+ 3pi0 nu(tau) (ex. K0, eta, omega, f1)) / G(total)
#
NLCONSTRAINT Gamma810.c 0 "-Gamma810 + (Gamma910 + Gamma911 + Gamma811 + Gamma812)"

#
# Gamma910 = G(2pi- pi+ eta(3pi0) nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma910 descr "G(2pi- pi+ eta(3pi0) nu(tau), (ex. K0)) / G(total)"
QUANTITY Gamma910 texdescr "2\pi^- \pi^+ \eta \nu_\tau (\eta \to \3\pi^0) ~(\mathrm{ex.~}K^0)"

#
# Gamma911 = G(pi- 2pi0 eta(pi+ pi- pi0) nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma911 descr "G(pi- 2pi0 eta(pi+ pi- pi0) nu(tau) (ex. K0)) / G(total)"
QUANTITY Gamma911 texdescr "\pi^- 2\pi^0 \eta \nu_\tau (\eta \to \pi^+ \pi^- \pi^0) ~(\mathrm{ex.~}K^0)"

#
# Gamma811 = G(pi- 2pi0 omega nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma811 descr "G(pi- 2pi0 omega nu(tau) (ex. K0)) / G(total)"
QUANTITY Gamma811 texdescr "\pi^- 2\pi^0 \omega \nu_\tau ~(\mathrm{ex.~}K^0)"

#
# Gamma812 = G(2pi- pi+ 3pi0 nu(tau) (ex. K0, eta, omega, f1)) / G(total)
#
QUANTITY Gamma812 descr "G(2pi- pi+ 3pi0 nu(tau) (ex. K0, eta, omega, f1)) / G(total)"
QUANTITY Gamma812 texdescr "2\pi^- \pi^+ 3\pi^0 \nu_\tau ~(\mathrm{ex.~}K^0, \eta, \omega, f_1)"

#
# Gamma820 = G(3pi- 2pi+ nu(tau) (ex. K0, omega)) / G(total)
#
QUANTITY Gamma820 descr "G(3pi- 2pi+ nu(tau) (ex. K0, omega)) / G(total)"
QUANTITY Gamma820 texdescr "3\pi^- 2\pi^+ \nu_\tau ~(\mathrm{ex.~}K^0, \omega)"
#
# Gamma820 = Gamma920 + Gamma821
#
# Gamma920 = G(pi- f1(2pi- 2pi+) nu(tau)) / G(total)
# Gamma821 = G(3pi- 2pi+ nu(tau) (ex. K0, omega, f1)) / G(total)
#
NLCONSTRAINT Gamma820.c 0 "-Gamma820 + (Gamma920 + Gamma821)"

#
# Gamma920 = G(pi- f1(2pi- 2pi+) nu(tau)) / G(total)
#
QUANTITY Gamma920 descr "G(pi- f1(2pi- 2pi+) nu(tau)) / G(total)"
QUANTITY Gamma920 texdescr "\pi^- f_1 \nu_\tau (f_1 \to 2\pi^- 2\pi^+)"

#
# Gamma821 = G(3pi- 2pi+ nu(tau) (ex. K0, omega, f1)) / G(total)
#
QUANTITY Gamma821 descr "G(3pi- 2pi+ nu(tau) (ex. K0, omega, f1)) / G(total)"
QUANTITY Gamma821 texdescr "3\pi^- 2\pi^+ \nu_\tau ~(\mathrm{ex.~}K^0, \omega, f_1)"

#
# Gamma822 = G(K 2pi- 2pi+ nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma822 descr "G(K 2pi- 2pi+ nu(tau) (ex. K0)) / G(total)"
QUANTITY Gamma822 texdescr "K 2\pi^- 2\pi^+ \nu_\tau ~(\mathrm{ex.~}K^0)"

#
# Gamma830 = G(3pi- 2pi+ pi0 nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma830 descr "G(3pi- 2pi+ pi0 nu(tau) (ex. K0)) / G(total)"
QUANTITY Gamma830 texdescr "3\pi^- 2\pi^+ \pi^0 \nu_\tau ~(\mathrm{ex.~}K^0)"
#
# Gamma830 = Gamma930 + Gamma831 + Gamma832
#
# Gamma930 = G(2pi- pi+ eta(pi+ pi- pi0) nu(tau) (ex. K0)) / G(total)
# Gamma831 = G(2pi- pi+ omega nu(tau) (ex. K0)) / G(total)
# Gamma832 = G(3pi- 2pi+ pi0 nu(tau) (ex. K0, eta, omega, f1)) / G(total)
#
NLCONSTRAINT Gamma830.c 0 "-Gamma830 + (Gamma930 + Gamma831*BR_om_pimpippiz + Gamma832)"

#
# Gamma930 = G(2pi- pi+ eta(pi+ pi- pi0) nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma930 descr "G(2pi- pi+ eta(pi+ pi- pi0) nu(tau) (ex. K0)) / G(total)"
QUANTITY Gamma930 texdescr "2\pi^- \pi^+ \eta \nu_\tau ((\eta \to \pi^+\pi^-\pi^0) ~(\mathrm{ex.~}K^0)"

#
# Gamma831 = G(2pi- pi+ omega nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma831 descr "G(2pi- pi+ omega nu(tau) (ex. K0)) / G(total)"
QUANTITY Gamma831 texdescr "2\pi^- \pi^+ \omega \nu_\tau ~(\mathrm{ex.~}K^0)"

#
# Gamma832 = G(3pi- 2pi+ pi0 nu(tau) (ex. K0, eta, omega, f1)) / G(total)
#
QUANTITY Gamma832 descr "G(3pi- 2pi+ pi0 nu(tau) (ex. K0, eta, omega, f1)) / G(total)"
QUANTITY Gamma832 texdescr "3\pi^- 2\pi^+ \pi^0 \nu_\tau ~(\mathrm{ex.~}K^0, \eta, \omega, f_1)"

#
# Gamma833 = G(K 2pi- 2pi+ pi0 nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma833 descr "G(K 2pi- 2pi+ pi0 nu(tau) (ex. K0)) / G(total)"
QUANTITY Gamma833 texdescr "K 2\pi^- 2\pi^+ \pi^0 \nu_\tau ~(\mathrm{ex.~}K^0)"

#
# Gamma941 = G(pi- f1(pi- pi+ eta(gamma gamma)) nu(tau)) / G(total)
#
QUANTITY Gamma941 descr "G(pi- f1(pi- pi+ eta(gamma gamma)) nu(tau)) / G(total)"
QUANTITY Gamma941 texdescr "\pi^- f_1 \nu_\tau (f_1 \to \pi^+ \pi^- \eta, \eta \to \gamma\gamma)"

#
# Gamma942 = G(pi- f1(pi- pi+ eta(pi- pi+ pi0)) nu(tau)) / G(total)
#
QUANTITY Gamma942 descr "G(pi- f1(pi- pi+ eta(pi+ pi- pi0)) nu(tau)) / G(total)"
QUANTITY Gamma942 texdescr "\pi^- f_1 \nu_\tau (f_1 \to \pi^+ \pi^- \eta, \eta \to \pi^+\pi^-\pi^0)"

#
# Gamma943 = G(pi- f1(pi- pi+ eta(3pi0)) nu(tau)) / G(total)
#
QUANTITY Gamma943 descr "G(pi- f1(pi- pi+ eta(3pi0)) nu(tau)) / G(total)"
QUANTITY Gamma943 texdescr "\pi^- f_1 \nu_\tau (f_1 \to \pi^+ \pi^- \eta, \eta \to 3\pi^0)"

#
# Gamma944 = G(2pi- pi+ eta(gamma gamma) nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma944 descr "G(2pi- pi+ eta(gamma gamma) nu(tau) (ex. K0)) / G(total)"
QUANTITY Gamma944 texdescr "2\pi^- \pi^+ \eta \nu_\tau ((\eta \to \gamma\gamma) ~(\mathrm{ex.~}K^0)"

#
# Gamma950 = G(K+ 3pi- pi+ nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma950 descr "G(K+ 3pi- pi+ nu(tau) (ex. K0)) / G(total)"

#
# Gamma951 = G(K- K+ 2pi- pi+ nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma951 descr "G(K- K+ 2pi- pi+ nu(tau) (ex. K0)) / G(total)"

#
# Gamma952 = # G(K+ 3pi- pi+ pi0 nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma952 descr "G(K+ 3pi- pi+ pi0 nu(tau) (ex. K0)) / G(total)"

#
# Gamma945 = G(pi- 2pi0 eta nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma945 descr "G(pi- 2pi0 eta nu(tau) (ex. K0)) / G(total)"
QUANTITY Gamma945 texdescr "\pi^- 2\pi^0 \eta \nu_\tau ~(\mathrm{ex.~}K^0)"

#
# Gamma946 = G(2pi- pi+ eta nu(tau) (ex. K0)) / G(total)
#
QUANTITY Gamma946 descr "G(2pi- pi+ eta nu(tau) (ex. K0)) / G(total)"
QUANTITY Gamma946 texdescr "2\pi^- \pi^+ \eta \nu_\tau ~(\mathrm{ex.~}K^0)"

#
# revised constraints due to babar high-multi paper
#

#
# Gamma103 = G(3h- 2h+ nu(tau) (ex. K0)) / G(total)
#
# Gamma103 = Gamma820 + Gamma822 + Gamma831*BR_om_pimpip
#
# Gamma820 = G(3pi- 2pi+ nu(tau) (ex. K0, omega)) / G(total)
# Gamma822 = G(K 2pi- 2pi+ nu(tau) (ex. K0)) / G(total)
# Gamma831 = G(2pi- pi+ omega nu(tau) (ex. K0)) / G(total)
#
NLCONSTRAINT Gamma103.c 0 ”-Gamma103 + (Gamma820 + Gamma822 + Gamma831*BR_om_pimpip)"



#                                                  
# Gamma104 = G(3h- 2h+ pi0  nu(tau) (ex. K0)) / G(total)
#         
# Gamma104 = Gamma830 + Gamma833 + Gamma831*BR_om_pimpippiz
# Gamma830 = G(2pi- pi+ eta(pi+ pi- pi0) nu(tau) (ex. K0)) / G(total)  
# Gamma833 G(K- 2pi- 2pi+ pi0 nu(tau) (ex. K0)) / G(total)
# Gamma831 = G(2pi- pi+ omega nu(tau) (ex. K0)) / G(total)

NLCONSTRAINT Gamma104.c0”-Gamma104 + (Gamma830 + Gamma833 + Gamma831*BR_om_pimpippiz)" 


#
# integration of Sobie.1 paper results
# 
# constraints and base measurements
# 
# Gamma104 = G(3h- 2h+ pi0 nu(tau) =
#   3pi eta nu (ex. f1) * (eta -> pi+pi-pi0) +
#   3pi omega nu * (omega -> pi+pi-pi0) +
#   pi f1 nu * (f1 -> pi+pi-eta) * (eta -> pi+pi-pi0) +
#   3pi- 2pi+ pi0 nu (ex. eta, omega, f1)
# 
# G(3h- 3pi0 nu(tau) =
#   pi- 2pi0 eta nu * (omega -> pi+pi-pi0) +
#   pi- 2pi0 omega nu * (eta -> pi+pi-pi0) +
#   pi- f1 nu * (f1 -> pi+pi-eta) * (eta -> 3pi0) +
#   2pi- pi+ 3pi0 nu (ex. eta, omega, f1)
#




#
# Gamma55 = G(h- h- h+ >=0 neutrals nu(tau) (ex. K(S)0 --> pi- pi+) (``3-prong'')) / G(total)
#
# QUANTITY Gamma55 node S035B63 descr "G(h- h- h+ >=0 neutrals nu(tau) (ex. K(S)0 --> pi- pi+) (``3-prong'')) / G(total)"
#
# Gamma55 = (Gamma128*BR_eta_charged + Gamma152*(BR_om_pimpippiz+BR_om_pimpip) + Gamma78 + Gamma77 + Gamma94 + Gamma62 + Gamma70 + Gamma93 + Gamma126*BR_eta_charged + Gamma802 + Gamma803 + Gamma800*(BR_om_pimpippiz+BR_om_pimpip) + Gamma151*(BR_om_pimpippiz+BR_om_pimpip) + Gamma130*BR_eta_charged + Gamma801*BR_phi_KmKp/(BR_phi_KmKp+BR_phi_KSKL) + + Gamma136*BR_eta_neutral + Gamma901*BR_f1_2PIZPIpPIm + Gamma903*BR_om_pimpip)
#
# Gamma62 = G(pi- pi- pi+ nu(tau) (ex. K0, omega)) / G(total)
# Gamma70 = G(pi- pi- pi+ pi0 nu(tau) (ex. K0, omega)) / G(total)
# Gamma77 = G(h- h- h+ 2pi0 nu(tau) (ex. K0, omega, eta)) / G(total)
# Gamma78 = G(h- h- h+ 3pi0 nu(tau)) / G(total)
# Gamma93 = G(pi- K- K+ nu(tau)) / G(total)
# Gamma94 = G(pi- K- K+ pi0 nu(tau)) / G(total)
# Gamma126 = G(pi- pi0 eta nu(tau)) / G(total)
# Gamma128 = G(K- eta nu(tau)) / G(total)
# Gamma130 = G(K- pi0 eta nu(tau)) / G(total)
# Gamma151 = G(K- omega nu(tau)) / G(total)
# Gamma152 = G(h- pi0 omega nu(tau)) / G(total)
# Gamma800 = G(pi- omega nu(tau)) / G(total)
# Gamma801 = G(K- phi nu(tau) (phi->KK)) / G(total)
# Gamma802 = G(K- pi- pi+ nu(tau) (ex. K0, omega)) / G(total)
# Gamma803 = G(K- pi- pi+ pi0 nu(tau) (ex. K0, omega, eta)) / G(total)
#
# NLCONSTRAINT Gamma55.c 0 "-Gamma55 + (Gamma128*BR_eta_charged + Gamma152*(BR_om_pimpippiz+BR_om_pimpip) + Gamma78 + Gamma77 + Gamma94 + Gamma62 + Gamma70 + Gamma93 + Gamma126*BR_eta_charged + Gamma802 + Gamma803 + Gamma800*(BR_om_pimpippiz+BR_om_pimpip) + Gamma151*(BR_om_pimpippiz+BR_om_pimpip) + Gamma130*BR_eta_charged + Gamma801*BR_phi_KmKp/(BR_phi_KmKp+BR_phi_KSKL) + Gamma136*BR_eta_neutral + Gamma901*BR_f1_2PIZPIpPIm + Gamma903*BR_om_pimpip)"
#
# added:
# + Gamma136*BR_eta_neutral + Gamma901*BR_f1_2PIZPIpPIm + Gamma903*BR_om_pimpip
#

#
# Gamma74 = G(h- h- h+ >= 2pi0 nu(tau) (ex. K0)) / G(total)
#
# QUANTITY Gamma74 node S035C03 descr "G(h- h- h+ >= 2pi0 nu(tau) (ex. K0)) / G(total)"
#
# Gamma74 = (Gamma152*BR_om_pimpippiz + Gamma78 + Gamma77 + Gamma126*BR_eta_pimpippiz + Gamma130*BR_eta_pimpippiz)
#
# Gamma77 = G(h- h- h+ 2pi0 nu(tau) (ex. K0, omega, eta)) / G(total)
# Gamma78 = G(h- h- h+ 3pi0 nu(tau)) / G(total)
# Gamma126 = G(pi- pi0 eta nu(tau)) / G(total)
# Gamma130 = G(K- pi0 eta nu(tau)) / G(total)
# Gamma152 = G(h- pi0 omega nu(tau)) / G(total)
#
NLCONSTRAINT Gamma74.c 0 "-Gamma74 + (Gamma152*BR_om_pimpippiz + Gamma78 + Gamma77 + Gamma126*BR_eta_pimpippiz + Gamma130*BR_eta_pimpippiz + Gamma901*BR_f1_2PIZPIpPIm)"
#
# added:
# + Gamma901*BR_f1_2PIZPIpPIm
#

#
# Gamma76by54 = G(h- h- h+ 2pi0 nu(tau) (ex. K0)) / G(h- h- h+ >=0 neutrals >=0 K(L)0 nu(tau))
#
# QUANTITY Gamma76by54 node S035B25 descr "G(h- h- h+ 2pi0 nu(tau) (ex. K0)) / G(h- h- h+ >=0 neutrals >=0 K(L)0 nu(tau))"
#
# Gamma76by54 = (Gamma152*BR_om_pimpippiz + Gamma77 + Gamma126*BR_eta_pimpippiz + Gamma130*BR_eta_pimpippiz) / (Gamma128*BR_eta_charged + Gamma152*(BR_om_pimpippiz+BR_om_pimpip) + Gamma35*(BRA_Kz_KS_KET*BR_KS_pimpip) + Gamma40*(BRA_Kz_KS_KET*BR_KS_pimpip) + Gamma42*(BRA_Kz_KS_KET*BR_KS_pimpip) + Gamma78 + Gamma47*(2*BR_KS_pimpip*BR_KS_2piz) + Gamma77 + Gamma48*BR_KS_pimpip + Gamma50*(2*BR_KS_pimpip*BR_KS_2piz) + Gamma51*BR_KS_pimpip + Gamma94 + Gamma62 + Gamma70 + Gamma93 + Gamma126*BR_eta_charged + Gamma37*(BRA_Kz_KS_KET*BR_KS_pimpip) + Gamma802 + Gamma803 + Gamma800*(BR_om_pimpippiz+BR_om_pimpip) + Gamma151*(BR_om_pimpippiz+BR_om_pimpip) + Gamma130*BR_eta_charged + Gamma132*(BRA_Kzbar_KL_KET*BR_eta_pimpippiz + BRA_Kzbar_KS_KET*BR_KS_2piz*BR_eta_pimpippiz + BRA_Kzbar_KS_KET*BR_KS_pimpip*BR_eta_3piz) + Gamma53*(BRA_Kzbar_KS_KET*BR_KS_2piz+BRA_Kzbar_KL_KET) + Gamma801*(BR_phi_KmKp + BR_phi_KSKL*BR_KS_pimpip)/(BR_phi_KmKp+BR_phi_KSKL))
#
# Gamma35 = G(Kbar0 pi- nu(tau)) / G(total)
# Gamma37 = G(K- K0 nu(tau)) / G(total)
# Gamma40 = G(Kbar0 pi- pi0 nu(tau)) / G(total)
# Gamma42 = G(K- pi0 K0 nu(tau)) / G(total)
# Gamma47 = G(pi- K(S)0 K(S)0 nu(tau)) / G(total)
# Gamma48 = G(pi- K(S)0 K(L)0 nu(tau)) / G(total)
# Gamma50 = G(pi- K(S)0 K(S)0 pi0 nu(tau)) / G(total)
# Gamma51 = G(pi- K(S)0 K(L)0 pi0 nu(tau)) / G(total)
# Gamma53 = G(Kbar0 h- h- h+ nu(tau)) / G(total)
# Gamma62 = G(pi- pi- pi+ nu(tau) (ex. K0, omega)) / G(total)
# Gamma70 = G(pi- pi- pi+ pi0 nu(tau) (ex. K0, omega)) / G(total)
# Gamma77 = G(h- h- h+ 2pi0 nu(tau) (ex. K0, omega, eta)) / G(total)
# Gamma78 = G(h- h- h+ 3pi0 nu(tau)) / G(total)
# Gamma93 = G(pi- K- K+ nu(tau)) / G(total)
# Gamma94 = G(pi- K- K+ pi0 nu(tau)) / G(total)
# Gamma126 = G(pi- pi0 eta nu(tau)) / G(total)
# Gamma128 = G(K- eta nu(tau)) / G(total)
# Gamma130 = G(K- pi0 eta nu(tau)) / G(total)
# Gamma132 = G(Kbar0 pi- eta nu(tau)) / G(total)
# Gamma151 = G(K- omega nu(tau)) / G(total)
# Gamma152 = G(h- pi0 omega nu(tau)) / G(total)
# Gamma800 = G(pi- omega nu(tau)) / G(total)
# Gamma801 = G(K- phi nu(tau) (phi->KK)) / G(total)
# Gamma802 = G(K- pi- pi+ nu(tau) (ex. K0, omega)) / G(total)
# Gamma803 = G(K- pi- pi+ pi0 nu(tau) (ex. K0, omega, eta)) / G(total)
#
# NLCONSTRAINT Gamma76by54.c 0 "-Gamma76by54 + (Gamma152*BR_om_pimpippiz + Gamma77 + Gamma126*BR_eta_pimpippiz + Gamma130*BR_eta_pimpippiz) / (Gamma128*BR_eta_charged + Gamma152*(BR_om_pimpippiz+BR_om_pimpip) + Gamma35*(BRA_Kz_KS_KET*BR_KS_pimpip) + Gamma40*(BRA_Kz_KS_KET*BR_KS_pimpip) + Gamma42*(BRA_Kz_KS_KET*BR_KS_pimpip) + Gamma78 + Gamma47*(2*BR_KS_pimpip*BR_KS_2piz) + Gamma77 + Gamma48*BR_KS_pimpip + Gamma50*(2*BR_KS_pimpip*BR_KS_2piz) + Gamma51*BR_KS_pimpip + Gamma94 + Gamma62 + Gamma70 + Gamma93 + Gamma126*BR_eta_charged + Gamma37*(BRA_Kz_KS_KET*BR_KS_pimpip) + Gamma802 + Gamma803 + Gamma800*(BR_om_pimpippiz+BR_om_pimpip) + Gamma151*(BR_om_pimpippiz+BR_om_pimpip) + Gamma130*BR_eta_charged + Gamma132*(BRA_Kzbar_KL_KET*BR_eta_pimpippiz + BRA_Kzbar_KS_KET*BR_KS_2piz*BR_eta_pimpippiz + BRA_Kzbar_KS_KET*BR_KS_pimpip*BR_eta_3piz) + Gamma53*(BRA_Kzbar_KS_KET*BR_KS_2piz+BRA_Kzbar_KL_KET) + Gamma801*(BR_phi_KmKp + BR_phi_KSKL*BR_KS_pimpip)/(BR_phi_KmKp+BR_phi_KSKL) + Gamma130*BR_eta_pimpippiz)"
#
# added:
# + Gamma130*BR_eta_pimpippiz
#

#
# GammaAll = G(total)
#
# QUANTITY GammaAll node S035S01 descr "G(total)"
#
# GammaAll = (Gamma3 + Gamma5 + Gamma9 + Gamma10 + Gamma14 + Gamma16 + Gamma20 + Gamma23 + Gamma27 + Gamma28 + Gamma30 + Gamma35 + Gamma37 + Gamma40 + Gamma42 + Gamma46 + Gamma62 + Gamma70 + Gamma77 + Gamma78 + Gamma93 + Gamma94 + Gamma104 + Gamma126 + Gamma128 + Gamma802 + Gamma803 + Gamma800 + Gamma151 + Gamma130 + Gamma132 + Gamma44 + Gamma53 + Gamma50*(1-2*BR_KS_pimpip*BR_KS_2piz) + Gamma51 + Gamma806 + Gamma805 + Gamma801 + Gamma152 + Gamma103)
#
# Gamma3 = G(mu- nubar(mu) nu(tau)) / G(total)
# Gamma5 = G(e- nubar(e) nu(tau)) / G(total)
# Gamma9 = G(pi- nu(tau)) / G(total)
# Gamma10 = G(K- nu(tau)) / G(total)
# Gamma14 = G(pi- pi0 nu(tau)) / G(total)
# Gamma16 = G(K- pi0 nu(tau)) / G(total)
# Gamma20 = G(pi- 2pi0 nu(tau) (ex. K0)) / G(total)
# Gamma23 = G(K- 2pi0 nu(tau) (ex. K0)) / G(total)
# Gamma27 = G(pi- 3pi0 nu(tau) (ex. K0)) / G(total)
# Gamma28 = G(K- 3pi0 nu(tau) (ex. K0, eta)) / G(total)
# Gamma30 = G(h- 4pi0 nu(tau) (ex. K0, eta)) / G(total)
# Gamma35 = G(Kbar0 pi- nu(tau)) / G(total)
# Gamma37 = G(K- K0 nu(tau)) / G(total)
# Gamma40 = G(Kbar0 pi- pi0 nu(tau)) / G(total)
# Gamma42 = G(K- pi0 K0 nu(tau)) / G(total)
# Gamma44 = G(Kbar0 pi- 2pi0 nu(tau)) / G(total)
# Gamma46 = G(pi- K0 Kbar0 nu(tau)) / G(total)
# Gamma49 = G(pi- pi0 K0 Kbar0 nu(tau)) / G(total)
# Gamma50 = G(pi- K(S)0 K(S)0 pi0 nu(tau)) / G(total)
# Gamma51 = G(pi- K(S)0 K(L)0 pi0 nu(tau)) / G(total)
# Gamma806 = G(pi- K(L)0 K(L)0 pi0 nu(tau)) / G(total)
# Gamma53 = G(Kbar0 h- h- h+ nu(tau)) / G(total)
# Gamma62 = G(pi- pi- pi+ nu(tau) (ex. K0, omega)) / G(total)
# Gamma70 = G(pi- pi- pi+ pi0 nu(tau) (ex. K0, omega)) / G(total)
# Gamma77 = G(h- h- h+ 2pi0 nu(tau) (ex. K0, omega, eta)) / G(total)
# Gamma78 = G(h- h- h+ 3pi0 nu(tau)) / G(total)
# Gamma93 = G(pi- K- K+ nu(tau)) / G(total)
# Gamma94 = G(pi- K- K+ pi0 nu(tau)) / G(total)
# Gamma103 = G(3h- 2h+ nu(tau) (ex. K0)) / G(total)
# Gamma104 = G(3h- 2h+ pi0 nu(tau) (ex. K0)) / G(total)
# Gamma126 = G(pi- pi0 eta nu(tau)) / G(total)
# Gamma128 = G(K- eta nu(tau)) / G(total)
# Gamma130 = G(K- pi0 eta nu(tau)) / G(total)
# Gamma132 = G(Kbar0 pi- eta nu(tau)) / G(total)
# Gamma151 = G(K- omega nu(tau)) / G(total)
# Gamma152 = G(h- pi0 omega nu(tau)) / G(total)
# Gamma800 = G(pi- omega nu(tau)) / G(total)
# Gamma801 = G(K- phi nu(tau) (phi->KK)) / G(total)
# Gamma802 = G(K- pi- pi+ nu(tau) (ex. K0, omega)) / G(total)
# Gamma803 = G(K- pi- pi+ pi0 nu(tau) (ex. K0, omega, eta)) / G(total)
# Gamma805 = G(a1- (-> pi- gamma) nu(tau)) / G(total)
#
# NLCONSTRAINT GammaAll.c 0 "-GammaAll + (Gamma3 + Gamma5 + Gamma9 + Gamma10 + Gamma14 + Gamma16 + Gamma20 + Gamma23 + Gamma27 + Gamma28 + Gamma30 + Gamma35 + Gamma37 + Gamma40 + Gamma42 + Gamma46 + Gamma51 + Gamma62 + Gamma70 + Gamma77 + Gamma78 + Gamma93 + Gamma94 + Gamma103 + Gamma104 + Gamma126 + Gamma128 + Gamma802 + Gamma803 + Gamma800 + Gamma151 + Gamma152 + Gamma130 + Gamma132 + Gamma44 + Gamma53 + Gamma50*(1-2*BR_KS_pimpip*BR_KS_2piz) + Gamma806 + Gamma805 + Gamma801 + Gamma900 + Gamma901 + Gamma902 + Gamma903)"
#
# added:
# + Gamma900 + Gamma901 + Gamma902 + Gamma903
#
